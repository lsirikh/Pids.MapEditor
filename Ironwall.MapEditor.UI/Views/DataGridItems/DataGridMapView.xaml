<UserControl x:Class="Ironwall.MapEditor.UI.Views.DataGridItems.DataGridMapView"
             xmlns:local="clr-namespace:Ironwall.MapEditor.UI.Views.DataGridItems"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:utils="clr-namespace:WPF.Utils;assembly=WPF.Utils"
             xmlns:entities="clr-namespace:Ironwall.MapEditor.UI.Models"
             xmlns:utilPass="clr-namespace:WPF.Utils.PasswordControl;assembly=WPF.Utils"
             xmlns:enums="clr-namespace:Ironwall.Enums;assembly=Ironwall.Enums"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behavior="clr-namespace:WPF.Utils.Behaviors;assembly=WPF.Utils"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <Grid Height="350">
        <Grid.RowDefinitions>
            <RowDefinition Height="1.5*" />
            <RowDefinition Height="9*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Viewbox Stretch="UniformToFill"
                     VerticalAlignment="Center">
                <Button x:Name="ButtonAdd"
                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                        ToolTip="추가하기"
                        md:RippleAssist.IsCentered="True">

                    <md:PackIcon Width="25"
                                 Height="25"
                                 Kind="AddBox" />
                </Button>
            </Viewbox>
            <Viewbox Stretch="UniformToFill"
                     VerticalAlignment="Center">
                <Button x:Name="ButtonRemove"
                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                        ToolTip="삭제하기"
                        md:RippleAssist.IsCentered="True">
                    <md:PackIcon Width="25"
                                 Height="25"
                                 Kind="RemoveBox" />
                </Button>
            </Viewbox>
        </StackPanel>
        <DataGrid Grid.Row="1"
                  x:Name="CollectionEntity"
                  AlternatingRowBackground="Gray"
                  CanUserAddRows="False"
                  HorizontalScrollBarVisibility="Auto"
                  AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id"
                                    Binding="{Binding Path=Id, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Path=MapName, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTextColumn Header="Number"
                                    Binding="{Binding Path=MapNumber, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTextColumn Header="FileName"
                                    IsReadOnly="True"
                                    Binding="{Binding Path=FileName, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTextColumn Header="FileType"
                                    IsReadOnly="True"
                                    Binding="{Binding Path=FileType, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTemplateColumn Header="Url">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Width="200"
                                       ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}}"
                                       Text="{Binding Path=Url, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}"
                                       TextTrimming="CharacterEllipsis"
                                       HorizontalAlignment="Left" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">

                                <TextBox Margin="5 0"
                                         Width="200"
                                         IsReadOnly="True"
                                         ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}}"
                                         Text="{Binding Path=Url, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                                <Button cal:Message.Attach="[Event Click]=[Action ClickOpenFile($source, $eventArgs)]"
                                        Margin="5 0"
                                        Padding="5"
                                        Content="Open"></Button>
                            </StackPanel>
                            <!--
                            <ComboBox ItemsSource="{Binding Path=Addresses}"
                                      SelectedItem="{Binding Path=PrimaryAddress}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=FullAddress}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            -->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Header="Width"
                                    Binding="{Binding Path=Width, StringFormat={}{0:#,#.00}, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTextColumn Header="Height"
                                    Binding="{Binding Path=Height, StringFormat={}{0:#,#.00}, Mode=Twoway,  UpdateSourceTrigger=PropertyChanged}" />
                
                <DataGridTemplateColumn  Header="Used"
                                         SortMemberPath="Used"
                                         CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Used, Mode=TwoWay, Converter={StaticResource TrueFalseToTextConverter}, UpdateSourceTrigger=LostFocus}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox VerticalAlignment="Center"
                                      ItemsSource="{Binding Source={utils:EnumBindingSource {x:Type enums:EnumTrueFalse}}}"
                                      SelectedItem="{Binding Used, Mode=TwoWay, Converter={StaticResource TrueFalseToBooleanConverter}, UpdateSourceTrigger=LostFocus}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem" />
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn  Header="Visibility"
                                         SortMemberPath="Visibility"
                                         CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Visibility, Mode=TwoWay, Converter={StaticResource TrueFalseToTextConverter}, UpdateSourceTrigger=LostFocus}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox VerticalAlignment="Center"
                                      ItemsSource="{Binding Source={utils:EnumBindingSource {x:Type enums:EnumTrueFalse}}}"
                                      SelectedItem="{Binding Visibility, Mode=TwoWay, Converter={StaticResource TrueFalseToBooleanConverter}, UpdateSourceTrigger=LostFocus}">

                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem" />
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            
        </DataGrid>
    </Grid>
    
</UserControl>
